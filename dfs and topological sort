#include <bits/stdc++.h>
#define ll long long int
using namespace std;
bool visited[26];
bool cycle[26];
bool freq[26];
stack <char> res;
bool check_cycle(int u, vector<vector<int>> &adj){
    if(!visited[u]){
        visited[u]=true;
        cycle[u]=true;
        for(auto it:adj[u]){
            if(!visited[it] && check_cycle(it,adj)){
                return true;
            }
            else if(cycle[it]){
                return true;
            }
        }
    }
    cycle[u]=false;
    return false;
}
void topo(int u,vector<vector<int>> &adj){
    visited[u]=true;
    for(auto it:adj[u]){
        if(!visited[it]){
            topo(it,adj);
        }
    }
    res.push(char(u+65));
}
void solve(vector<vector<int>> & adj){
    bool ok=true;
    for(int i=0;i<26;i++){
        if(check_cycle(i,adj)){
            ok=false;
            break;
        }    
    }
    if(!ok){
        cout<<-1<<'\n';
    }
    else{
        memset(visited,false,sizeof(visited));
        for(int i=0;i<26;i++){
            if(freq[i]){
                if(!visited[i]){
                    topo(i,adj);
                }    
            }    
        }
        while(!res.empty()){
            cout<<res.top();
            res.pop();
        }
        cout<<'\n';
    }
}

int main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    int t;
    cin>>t;
    int tt=t;
    while(t--){
        memset(visited,false,sizeof(visited));
        memset(cycle,false,sizeof(cycle));
        memset(freq,false,sizeof(freq));
        vector<vector<int>> adj(26);
        int r,c;
        cin>>r>>c;
        vector<vector<char>> arr(r,vector<char>(c));
        for(int i=0;i<r;i++){
            for(int j=0;j<c;j++){
                cin>>arr[i][j];
                freq[arr[i][j]-65]=true;
            }
        }
        for(int j=0;j<c;j++){
            for(int i=r-1;i>0;i--){
                if(arr[i][j]!=arr[i-1][j]){
                    int u=arr[i][j]-65;
                    int v=arr[i-1][j]-65;
                    adj[u].push_back(v);
                }    
            }
        }
        cout<<"Case #"<<tt-t<<": ";
        solve(adj);   
    }
    
    return 0;
}
